#1. process_metadata
    python .\preprocessing\process_metadata.py `
        --annotations_input_path .\annotations\annotations_bbox_train.csv `
        --point_output_path .\annotations_points\points_train.json

#2. create_label_map
    ทำเอง

#3. TFRecord
    python .\preprocessing\record_maker.py `
        --points_path .\annotations_points\points_test.json `
        --record_save_path .\TFRecord_output\test.record `
        --label_map_path .\label_map\label_map.pbtxt `
        --saved_images_directory .\images\test\

#4. Train
    python object_detection/train.py `
        --logtostderr `
        --train_dir=object_detection/train_dir `
        --pipeline_config_path=object_detection/pipeline_config/faster_rcnn_resnet101_coco.config

#5. Eval
    python object_detection/eval.py `
        --logtostderr `
        --checkpoint_dir=object_detection/train_dir `
        --eval_dir=object_detection/eval_dir `
        --pipeline_config_path=object_detection/pipeline_config_path/faster_rcnn_resnet101_coco.config

#6. run tensorboard
    tensorboard `
        --logdir=training:/PATH_TO_TRAINING_OUTPUT_DIR,testing:/PATH_TO_EVAL_OUTPUT_DIR `
        --port=6006 `
        --host=localhost

#7. create inference graph
    python export_inference_graph.py --input_type image_tensor `
        --pipeline_config_path /PATH/TO/CONFIG/FILE.config `
        --trained_checkpoint_prefix /PATH/TO/TRAINED/OUTPUT/DIRECTORY/model.ckpt `
        --output_directory /PATH/TO/FROZEN/DIRECTORY

#train on gcloud
    gcloud ml-engine jobs submit training object_detection_kuse_v1 `
    	--runtime-version 1.4 `
    	--job-dir=gs://kuse_gs/train `
    	--packages dist/object_detection-0.1.tar.gz,slim/dist/slim-0.1.tar.gz `
    	--module-name object_detection.train `
    	--region us-central1 `
    	--config object_detection/samples/cloud/cloud.yml `
    	-- `
    	--train_dir=gs://kuse_gs/train `
    	--pipeline_config_path=gs://kuse_gs/data/ssd_mobilenet_v1_coco.config
